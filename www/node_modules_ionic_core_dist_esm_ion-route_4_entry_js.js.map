{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","constructor","hostRef","registerInstance","ionRouteDataChanged","createEvent","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","componentOnReady","result","setRouteId","element","markVisible","e","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","debounce","onRedirectChanged","bind","onPopState","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","startsWith","currentPath","URL","search","parsedPath","waitPromise","printDebug","navChanged","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","unlock","lock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","getElement","routerLinkCss","RouterLink","routerDirection","onClick","openURL","routerAnimation","render","mode","getIonMode","attrs","rel","target","h","Host","class","createColorClasses","color","style"],"mappings":"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","file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-b3eecb14.js';\nimport { c as componentOnReady, q as debounce } from './helpers-4d272360.js';\nimport { b as getIonMode } from './ionic-global-f1ce4d2d.js';\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"sourceRoot":"webpack:///"}