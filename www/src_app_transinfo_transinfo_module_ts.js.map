{"version":3,"sources":["./src/app/transinfo/transinfo-routing.module.ts","./src/app/transinfo/transinfo.module.ts","./src/app/transinfo/transinfo.page.ts","./src/app/transinfo/transinfo.page.scss","./src/app/transinfo/transinfo.page.html"],"names":[],"mappings":"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","file":"src_app_transinfo_transinfo_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TransinfoPage } from './transinfo.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TransinfoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TransinfoPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TransinfoPageRoutingModule } from './transinfo-routing.module';\r\n\r\nimport { TransinfoPage } from './transinfo.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TransinfoPageRoutingModule\r\n  ],\r\n  declarations: [TransinfoPage]\r\n})\r\nexport class TransinfoPageModule {}\r\n","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\r\nimport { LoadingController, AlertController, NavController } from '@ionic/angular';\r\nimport axios from 'axios';\r\nimport { environment } from '../../../src/environments/environment';  \r\nimport { Storage } from '@ionic/storage-angular';\r\n\r\n\r\ndeclare var google;\r\n\r\n@Component({\r\n  selector: 'app-transinfo',\r\n  templateUrl: './transinfo.page.html',\r\n  styleUrls: ['./transinfo.page.scss'],\r\n})\r\nexport class TransinfoPage implements OnInit {\r\n\r\n  @ViewChild('map',  {static: false}) mapElement: ElementRef;\r\n  map: any;\r\n  address:string;\r\n  lat: string;\r\n  long: string;  \r\n  autocomplete: { input: string; };\r\n  autocompleteItems: any[];\r\n  location: Object;\r\n  placeid: any;\r\n  GoogleAutocomplete: any;\r\n  from : Object;\r\n  to: Object;\r\n  mode: string;\r\n  odometer: String;\r\n  transaction_id: Number;\r\n  vehicle_id: Number;\r\n  name: String;\r\n  transaction: Object;\r\n\r\n\r\n  constructor(\r\n    private geolocation: Geolocation,\r\n    private nativeGeocoder: NativeGeocoder,    \r\n    public zone: NgZone,\r\n    public loadingController: LoadingController, \r\n    public alertController: AlertController,\r\n    private storage: Storage,\r\n    private route : ActivatedRoute,\r\n    private navCtrl: NavController\r\n    \r\n  ) {\r\n    // this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\r\n    // this.autocomplete = { input: '' };\r\n    // this.autocompleteItems = [];\r\n    // this.location = {\r\n    //   from: '',\r\n    //   to: ''\r\n    // },\r\n    // this.mode = '';\r\n    // this.odometer = '';\r\n    this.transaction_id = parseInt(this.route.snapshot.paramMap.get('transaction_id'));\r\n    this.vehicle_id = parseInt(this.route.snapshot.paramMap.get('vehicle_id'));\r\n    this.transaction = {\r\n      address_start: '',\r\n      address_end: '',\r\n      odometer_start:'',\r\n      odometer_end:'',\r\n      datetime : new Date().toISOString()\r\n    }\r\n    this.loadTransaction()\r\n  }\r\n   \r\n  async loadTransaction()\r\n  {\r\n\r\n    const sData = await this.storage.get(\"data\")\r\n    const transaction = sData.vehicles.find(x=> x.id == this.vehicle_id).travels.find(x=> x.id == this.transaction_id);\r\n    \r\n    this.transaction['address_start'] = transaction.address_start;\r\n    this.transaction['address_end'] = transaction.address_end;\r\n    this.transaction['odometer_start'] = transaction.odometer_start;\r\n    this.transaction['odometer_end'] = transaction.odometer_end;\r\n    this.transaction['datetime'] = new Date(transaction['datetime']).toISOString();\r\n    // console.log(this.vehicle_id, this.transaction_id);\r\n    // console.log(sData.vehicles.find(x=>x.id == this.vehicle_id));\r\n    // console.log(this.transaction['datetime']);\r\n    // this.transaction['datetime'] = new Date(this.transaction['datetime'])\r\n\r\n    console.log(this.transaction)\r\n  }\r\n  async loadTransactionOld()\r\n  {\r\n    const sData = await this.storage.get(\"data\")\r\n\r\n    this.transaction = sData.vehicles.find(x=>x.id == this.vehicle_id).transactions.find(x=>x.id == this.transaction_id);\r\n    \r\n    this.location['from']  =  this.transaction['from_address'];\r\n    this['from'] =  {\r\n      lat: this.transaction['from_lat'],\r\n      lng: this.transaction['from_lng']\r\n    }\r\n    console.log(this.transaction)\r\n    this.location['to']  =  this.transaction['to_address'];\r\n\r\n    this['to'] =  {\r\n      lat: this.transaction['to_lat'],\r\n      lng: this.transaction['to_lng']\r\n    }\r\n    this.name = this.transaction['name'];\r\n  }\r\n   //LOAD THE MAP ONINIT.\r\n   async ngOnInit() {\r\n    // this.loadMap();   \r\n    // const vehicles = await this.storage.get(\"vehicles\")\r\n    // console.log(vehicles);\r\n  }\r\n\r\n    //LOADING THE MAP HAS 2 PARTS.\r\n  loadMap() {\r\n    \r\n      //FIRST GET THE LOCATION FROM THE DEVICE.\r\n      this.geolocation.getCurrentPosition().then((resp) => {\r\n        let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\r\n        let mapOptions = {\r\n          center: latLng,\r\n          zoom: 15,\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP\r\n        } \r\n\r\n         //LOAD THE MAP WITH THE PREVIOUS VALUES AS PARAMETERS.\r\n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude); \r\n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions); \r\n      this.map.addListener('tilesloaded', () => {\r\n        // console.log('accuracy',this.map, this.map.center.lat());\r\n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\r\n        this.lat = this.map.center.lat()\r\n        this.long = this.map.center.lng()\r\n      }); \r\n    }).catch((error) => {\r\n      // console.log('Error getting location', error);\r\n    });\r\n  }\r\n\r\n  getAddressFromCoords(lattitude, longitude) {\r\n    // console.log(\"getAddressFromCoords \"+lattitude+\" \"+longitude);\r\n    let options: NativeGeocoderOptions = {\r\n      useLocale: true,\r\n      maxResults: 5    \r\n    }; \r\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\r\n      .then((result: NativeGeocoderResult[]) => {\r\n        this.address = \"\";\r\n        let responseAddress = [];\r\n        for (let [key, value] of Object.entries(result[0])) {\r\n          if(value.length>0)\r\n          responseAddress.push(value); \r\n        }\r\n        responseAddress.reverse();\r\n        for (let value of responseAddress) {\r\n          this.address += value+\", \";\r\n        }\r\n        this.address = this.address.slice(0, -2);\r\n      })\r\n      .catch((error: any) =>{ \r\n        this.address = \"Address Not Available!\";\r\n      }); \r\n  }\r\n\r\n  //FUNCTION SHOWING THE COORDINATES OF THE POINT AT THE CENTER OF THE MAP\r\n  ShowCords(){\r\n    // alert('lat' +this.lat+', long'+this.long )\r\n  }\r\n  \r\n  //AUTOCOMPLETE, SIMPLY LOAD THE PLACE USING GOOGLE PREDICTIONS AND RETURNING THE ARRAY.\r\n  UpdateSearchResults( type :string ){\r\n    const input = this.location[type]\r\n    this.mode = type;\r\n    if (input== '') {\r\n      this.autocompleteItems = [];\r\n      return;\r\n    }\r\n    this.GoogleAutocomplete.getPlacePredictions({ input: input, componentRestrictions: {country: 'ph'}},\r\n    (predictions, status) => {\r\n      this.autocompleteItems = [];\r\n      this.zone.run(() => {\r\n        predictions.forEach((prediction) => {\r\n          this.autocompleteItems.push(prediction);\r\n        });\r\n      });\r\n    });\r\n\r\n  }\r\n  \r\n  //wE CALL THIS FROM EACH ITEM.\r\n  async SelectSearchResult(item) {\r\n    ///WE CAN CONFIGURE MORE COMPLEX FUNCTIONS SUCH AS UPLOAD DATA TO FIRESTORE OR LINK IT TO SOMETHING\r\n    const geocoder = new google.maps.Geocoder();\r\n    const {results} = await geocoder.geocode({placeId: item.place_id})\r\n\r\n    // console.log(results)\r\n    this[this.mode] = {\r\n      lat: results[0].geometry.location.lat(),\r\n      lng: results[0].geometry.location.lng(),\r\n    }\r\n    // console.log(item.place_id);\r\n    // alert(JSON.stringify(item))      \r\n    this.placeid = item.place_id\r\n    this.location[this.mode] = item.description;\r\n    this.autocompleteItems = [];\r\n    // console.log(this.autocompleteItems);\r\n    // this.GoTo();\r\n  }\r\n  \r\n  \r\n  //lET'S BE CLEAN! THIS WILL JUST CLEAN THE LIST WHEN WE CLOSE THE SEARCH BAR.\r\n  ClearAutocomplete(param:string){\r\n    this.autocompleteItems = []\r\n    this.autocomplete.input = ''\r\n\r\n    this[param] =undefined\r\n  }\r\n \r\n  //sIMPLE EXAMPLE TO OPEN AN URL WITH THE PLACEID AS PARAMETER.\r\n  GoTo(){\r\n    return window.location.href = 'https://www.google.com/maps/search/?api=1&query=Google&query_place_id='+this.placeid;\r\n  }\r\n\r\n  async submit(){\r\n\r\n    if(this.from== undefined || this.to == undefined || this.odometer=='' || this.name == '')\r\n    {\r\n      const alert = await this.alertController.create({\r\n        header: 'Alert',\r\n        message: 'Please fill all fields',\r\n        buttons: ['OK'] \r\n      })\r\n      await alert.present();\r\n      return;\r\n    }\r\n    this.from['address'] = this.location['from'];\r\n    this.to['address'] = this.location['to'];\r\n    const form = {\r\n      from: this.from,\r\n      to: this.to,\r\n      odometer: this.odometer,\r\n      // vehicle_id: this.vehicle_id,\r\n      name: this.name\r\n    }\r\n\r\n    // console.log(form)\r\n    const token = await this.storage.get('access_token');\r\n\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*', \r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    };\r\n    const URL = `${environment.API_HOST}/transaction`;\r\n\r\n    const loading = await this.loadingController.create({message: 'Please wait'})\r\n    await loading.present()\r\n\r\n    try{\r\n      \r\n      let {data} = await axios.post(URL, form, config);\r\n      let sData =  await this.storage.get(\"data\")\r\n      // sData.vehicles.find(x => x.id == this.vehicle_id).transactions.push(data.data);\r\n      await this.storage.set('data', sData)\r\n      await loading.dismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Success',\r\n        message: 'Transaction Added',\r\n        buttons: ['OK'] \r\n      })\r\n      await alert.present();\r\n      this.navCtrl.back();      \r\n    }catch(error){\r\n      await loading.dismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Alert',\r\n        message: 'Error',\r\n        buttons: ['OK'] \r\n      })\r\n      await alert.present();\r\n    }\r\n  }\r\n  \r\n}\r\n","export default \".md .centered-p {\\n  text-align: center;\\n  margin-left: -25%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zaW5mby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoidHJhbnNpbmZvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZCAuY2VudGVyZWQtcCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogLTI1JVxyXG4gIH0iXX0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n      <p class=\\\"centered-p\\\">Transaction</p>\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/translist\\\" name=\\\"arrow-back-outline\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  \\r\\n    \\r\\n    <!-- <ion-searchbar [(ngModel)]=\\\"autocomplete.input\\\" debounce = \\\"500\\\" (ionChange)=\\\"UpdateSearchResults('from')\\\" placeholder=\\\"From\\\"\\r\\n      (ionClear)=\\\"ClearAutocomplete()\\\"></ion-searchbar>\\r\\n    <ion-searchbar [(ngModel)]=\\\"autocomplete.input\\\" debounce = \\\"500\\\" (ionChange)=\\\"UpdateSearchResults('to')\\\" placeholder=\\\"To\\\"\\r\\n      (ionClear)=\\\"ClearAutocomplete()\\\"></ion-searchbar> -->\\r\\n    <!-- <ion-searchbar [(ngModel)]=\\\"location.from\\\" debounce = \\\"500\\\" (ionChange)=\\\"UpdateSearchResults('from')\\\" placeholder=\\\"From\\\"\\r\\n      (ionClear)=\\\"ClearAutocomplete('from')\\\"></ion-searchbar>\\r\\n    <ion-searchbar [(ngModel)]=\\\"location.to\\\" debounce = \\\"500\\\" (ionChange)=\\\"UpdateSearchResults('to')\\\" placeholder=\\\"To\\\"\\r\\n      (ionClear)=\\\"ClearAutocomplete('to')\\\"></ion-searchbar> -->\\r\\n  \\r\\n<!-- \\r\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\r\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"SelectSearchResult(item)\\\">\\r\\n      {{ item.description }}\\r\\n    </ion-item>\\r\\n  </ion-list> -->\\r\\n\\r\\n  <ion-row>\\r\\n    <!-- <ion-col size=\\\"6\\\">\\r\\n      <ion-text>Google & Ionic Map</ion-text>\\r\\n    </ion-col> -->\\r\\n    <!-- <ion-toolbar>\\r\\n      <ion-button style=\\\"background:#FFFFFF\\\" (click)=\\\"loadMap()\\\" shape=\\\"round\\\" fill=\\\"outline\\\">\\r\\n        <ion-icon slot=\\\"secondary\\\" name=\\\"locate\\\"></ion-icon>\\r\\n        Where i am\\r\\n      </ion-button>\\r\\n    </ion-toolbar>  -->\\r\\n    \\r\\n  </ion-row>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <!-- <ion-input [(ngModel)] = \\\"odometer\\\" placeholder=\\\"odometer\\\"></ion-input>\\r\\n  <ion-button (click) = \\\"submit()\\\" color=\\\"light\\\">Submit</ion-button> -->\\r\\n\\r\\n  <!-- \\r\\n    \\r\\n    <ion-fab-button (click)=\\\"ShowCords()\\\" ion-fab color=\\\"tertiary\\\">\\r\\n      <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n  <div class=\\\"map-wrapper\\\" style=\\\"height: 100%;\\\">\\r\\n    <div id=\\\"map_center\\\">\\r\\n      <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"danger\\\"></ion-icon>\\r\\n    </div>\\r\\n    <div #map id=\\\"map\\\" style=\\\"height: 100%;\\\"></div>\\r\\n  </div> -->\\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Starting point</ion-label>\\r\\n    <ion-input [(ngModel)]='transaction.address_start' ></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Starting odometer</ion-label>\\r\\n    <ion-input [(ngModel)]='transaction.odometer_start'></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Destination</ion-label>\\r\\n    <ion-input [(ngModel)]='transaction.address_end'></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Succeeding Odometer</ion-label>\\r\\n    <ion-input [(ngModel)]='transaction.odometer_end'></ion-input>\\r\\n  </ion-item>\\r\\n  \\r\\n  <ion-item>Date</ion-item>\\r\\n<ion-item>\\r\\n  <ion-datetime  presentation=\\\"time-date\\\" [(ngModel)]=\\\"transaction.datetime\\\">Date</ion-datetime>\\r\\n</ion-item>\\r\\n\\r\\n<!-- <ion-button slot=\\\"\\\" (click)=\\\"submit()\\\" color=\\\"warning\\\" expand=\\\"block\\\">Submit\\r\\n  <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\r\\n</ion-button> -->\\r\\n\\r\\n  \\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}